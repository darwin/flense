@import url(http://fonts.googleapis.com/css?family=Source+Code+Pro);

/* generic styles applying to the entire page */

* {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
  outline: none;
}

body {
  font-family: 'Source Code Pro';
  font-size: 14px;
  line-height: 1.4;
  margin-left: 5%;
  margin-top: 40px;
}

/* main editor view styles */

.token {
  border: none;
  font-family: inherit;
  font-size: inherit;
}

.coll {
  display: flex;
  flex-flow: row wrap;
}

.coll:not(.seq) > :not(:first-child) {
  margin-left: 0.5rem;
}
.seq > :not(:last-child):not(:nth-last-child(2)),
.runoff-children > :not(:last-child) {
  margin-right: 0.5rem;
}

.runoff-children {
  margin-left: 1rem;
  margin-top: -1.2rem;
}
.runoff-children:before {
  content: " ";
  margin-right: 1000px;
}
.runoff-children:empty {
  display: none;
}

.string-content {
  resize: none;
}

.flense {
  margin-bottom: 80px;
}

.flense > * {
  margin-bottom: 1rem;
  margin-left: 0;
}

.fn:before  { content: "#("; }
.fn:after   { content:  ")"; }
.map:before { content:  "{"; }
.map:after  { content:  "}"; }
.seq:before { content:  "("; }
.seq:after  { content:  ")"; }
.set:before { content: "#{"; }
.set:after  { content:  "}"; }
.vec:before { content:  "["; }
.vec:after  { content:  "]"; }

.regex:before  { content: "#\""; }
.regex:after   { content:  "\""; }
.string:before { content:  "\""; }
.string:after  { content:  "\""; }

/* match invalid structures and display in red */

.fn .fn,
.fn .fn *,
.fn .fn:before,
.fn .fn:after {
  color: red;
}

.map > :nth-child(odd):last-child {
  color: red;
}

/* styles for stuff other than the main editor view */

#width-tester {
  left: -1000px;
  position: absolute;
  top: -1000px;
  width: auto;
  white-space: pre;
}

#command-bar {
  border: none;
  border-top: 1px solid #ccc;
  bottom: 0;
  font-family: inherit;
  font-size: inherit;
  left: 0;
  padding: 1rem;
  position: fixed;
  width: 100%;
}
